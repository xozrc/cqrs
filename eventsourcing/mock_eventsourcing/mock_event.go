// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/xozrc/cqrs/eventsourcing (interfaces: VersionedEvent)

package mock_eventsourcing

import (
	gomock "github.com/golang/mock/gomock"
	types "github.com/xozrc/cqrs/types"
)

// Mock of VersionedEvent interface
type MockVersionedEvent struct {
	ctrl     *gomock.Controller
	recorder *_MockVersionedEventRecorder
}

// Recorder for MockVersionedEvent (not exported)
type _MockVersionedEventRecorder struct {
	mock *MockVersionedEvent
}

func NewMockVersionedEvent(ctrl *gomock.Controller) *MockVersionedEvent {
	mock := &MockVersionedEvent{ctrl: ctrl}
	mock.recorder = &_MockVersionedEventRecorder{mock}
	return mock
}

func (_m *MockVersionedEvent) EXPECT() *_MockVersionedEventRecorder {
	return _m.recorder
}

func (_m *MockVersionedEvent) SourceId() types.Guid {
	ret := _m.ctrl.Call(_m, "SourceId")
	ret0, _ := ret[0].(types.Guid)
	return ret0
}

func (_mr *_MockVersionedEventRecorder) SourceId() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SourceId")
}

func (_m *MockVersionedEvent) Version() int64 {
	ret := _m.ctrl.Call(_m, "Version")
	ret0, _ := ret[0].(int64)
	return ret0
}

func (_mr *_MockVersionedEventRecorder) Version() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Version")
}
